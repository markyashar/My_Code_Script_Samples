; This IDL program generates four plots from the data values in the
; file 'orbits.dat' file (generated by the Fortran 77 'orbits.f'
; program. The plots generated are: orbital speed vs orbital phase
; or extrasolar planet. Temperature of extrasolar planet vs. orbital 
; phase, and planet to star flux ratios vs. planetary orbital phase
; at wavelengths of 0.5 micron, 1 micron, 3 microns, and 10 microns.
; Orbital parameters and the legend for the planet to star flux ratio
; vs orbital speed are also displayed in two separate IDL display
; windows. This IDL program also uses an IDL procedure program written
; by Liam E. Gumley called 'loadcolors.pro' (see the relevant comment 
; lines in the body of the program below. 
;
; This program also indicates whether the inputs entered meet the
; criteria for a planet which, possibly, lies in the "habitable
; zone" of its parent star. (For the purposes of this program, a
; planet lying in the habitable zone of its parent star has a 
; temperature that fluctuates within and between 280K and 320K, where
; H2O can exist in liquid form.) If the program deems the planet to 
; lie in the habitable zone of its host star, then the plot of
; planet temperature vs orbital phase will turn green and a message
; within the plot will notify the user that the planet may lie
; in the habitable zone according to these simplified criteria.
;
; In general, the conditions needed to support Earth-type life may 
; exist for rocky planets (or sufficiently large moons of gas giant 
; planets) that are orbiting a star in its "habitable zone"  
; Such zones are bounded by the range of distances from a star for 
; which liquid water can exist on a planetary surface, depending on such
; additional factors as the nature and density of its atmosphere and 
; its surface gravity. In terms of orbital distance, the
; habitable zone for our own Solar System currently extends from at
; least 0.95 AU to 1.37 AU (where one AU equals Earth's average orbital
; distance around the Sun) (Reference: "Stars and Habitable Planets",
; http://www.solstation.com/habitable.htm)
;
;
; ***********************************************************
; References used in writing this program:
;
; "Using IDL to Manipulate and Visualize Scientific Data",
; Brisson, Erik, Scientific Computing and Visualization Tutorials
; and presentations.
; http://scv.bu.edu/Tutorials/IDL/
;
; "Fanning Consulting -- Coyote's Guide to IDL Programming",
; David W. Fanning, 1996-2003
; http://www.dfanning.com/
;
; Gumley, Liam E., "Practical IDL Programming -- Creating Effective
; Data Analysis and Visualization Applications", Academic Press, 2002
;
; Gumley, Liam E. "Practical IDL Programming"
; http://www.gumley.com/
; 
; "Stars and Habitable Planets", Sol Company, 1998-2002
; http://www.solstation.com/habitable.htm
;
; "Simple Graphs in IDL" and "Basics of IDL", Scientific/Numerical 
; Computing at the Univeristy of Colorado in Boulder
; http://www.colorado.edu/ITS/docs/scientific/idl/graph/
; 
; ************************************************************
PRO plots_orbits
device,retain=2,pseudo=8,decomposed=0
;The following two lines compile and execute a procedure named
;'loadcolors.pro' from pages 249-250 of the book "Practical
; IDL Programming" by Liam E. Gumley ; Copyright 2002 by
; Academic Press. This procedure loads 16 plotting colors into
; the color table. The colors are loaded starting at index 0
; by default, or at the index specified by the 'bottom' keyword.
; The names of the colors can be returned by the 'names' keyword.
; The loadcolors.pro code (procedure) must be in the same 
; directory as the 'orbits.f' and 'plots_orbits.pro' programs
; are in order for the overall program/code to be successfully
; compiled and executed
loadcolors 
; The 'orbits.f' Fortran 77 program is 'spawned' (i.e., it is
; compiled and executed) here within the IDL environment 
spawn, 'g77 orbits.f'
spawn, './a.out'
; The 'orbits.dat' generated by 'orbits.f' is read here, and
; arrays are set up.
OPENR,lun,'orbits.dat',/GET_LUN
header=STRARR(16)
READF,lun,header
time=FLTARR(10000)
phase=FLTARR(10000)
xpos=FLTARR(10000)
ypos=FLTARR(10000)
radius=FLTARR(10000)
velocity=FLTARR(10000)
temp=FLTARR(10000)
fluxr10=FLTARR(10000)
fluxr3=FLTARR(10000)
fluxr1=FLTARR(10000)
fluxr05=FLTARR(10000)
t=0.0
p=0.0
x=0.0
y=0.0
r=0.0
v=0.0
te=0.0
fr10=0.0
fr3=0.0
fr1=0.0
fr05=0.0
count=0
WHILE (NOT EOF(lun)) DO BEGIN
READF, lun, t,p,x,y,r,v,te,fr10,fr3,fr1,fr05
time(count)=t
phase(count)=p
xpos(count)=x
ypos(count)=y
radius(count)=r
velocity(count)=v
temp(count)=te
fluxr10(count)=fr10
fluxr3(count)=fr3
fluxr1(count)=fr1
fluxr05(count)=fr05
count = count + 1
ENDWHILE
time = time(0:count-1)
phase=phase(0:count-1)
xpos=xpos(0:count-1)
ypos=ypos(0:count-1)
radius=radius(0:count-1)
velocity=velocity(0:count-1)
temp=temp(0:count-1)
fluxr10=fluxr10(0:count-1)
fluxr3=fluxr3(0:count-1)
fluxr1=fluxr1(0:count-1)
fluxr05=fluxr05(0:count-1)
close, lun
; The plot of Y position in AU vs. X position in AU is
; generated and displayed here.
window, 0, xsize=890,ysize=740
!p.multi=[0,2,2]
plot, xpos, ypos, linestyle=2, $
title='X (AU)  vs.  Y(AU)', $
xtitle='X in AU',  $
ytitle='Y in AU'
plot, phase, velocity, psym=4,/noclip, $
title='Plot of Orbital Speed  vs.  Orbital Phase', $
xtitle='Orbital Phase (elapsed time/orbital period)',xcharsize=1.0,  $
ytitle='Orbital speed in km/s'
; If the planetary temperature lies between 280 K and 320 K throughout
; the course of one orbital period, then it is deemed to lie in the
; "habitable zone" of its host star.
amax=max(temp)
amin=min(temp)
if (amin ge 280.) and (amax le 320.) then begin
plot, phase,temp, psym=6,color=4, $
title='Planet Temperature (K) vs Orbital Phase', $
xtitle='Orbital Phase (time elapsed / orbital period)', $
ytitle='Temperature (K) of Extra-Solar Planet'
xyouts, 0.08,0.25,'!6THIS PLANET LIES IN THE HABITABLE ZONE OF ITS PARENT STAR!X', /normal, charsize=1.0,color=4
xyouts, 0.08,0.21,'!6(Its temperature varies between 280K and 320K, where water!X', /normal, charsize=1.02,color=4
xyouts, 0.08,0.19,'!6can exist in liquid form, as it moves through its orbit)!X', /normal, charsize=1.02,color=4
goto, jump1
endif
; Plot of planet temperature vs. orbital phase is generated and
; displayed. The four different flux ratios for the four wavelenghts
; are distinguished by different colors and plotting symbols.
plot, phase,temp, psym=6, $
title='Planet Temperature (K) vs Orbital Phase', $
xtitle='Orbital Phase (time elapsed / orbital period)', $
ytitle='Temperature (K) of Extra-Solar Planet'
jump1: ymax=max(fluxr10)
foo=[fluxr10,fluxr3,fluxr1,fluxr05]
gd=where(foo gt 0.)
ymin=min(foo[gd])
plot, phase,fluxr10,yrange=[ymin,ymax],/ylog, linestyle=2,/noerase,  $
title='Planet to Star Flux Ratios vs Orbital Phase',   $
xtitle='Orbital Phase (time elapsed / orbital period)',   $
ytitle='Planet to Star Flux Ratios vs Orbital Phase'
oplot, phase,fluxr3, linestyle=3, color=5
oplot, phase,fluxr1,linestyle=4, color=6
oplot, phase,fluxr05,linestyle=5, color=9
; Black and white .jpeg images (.jpg) of the plots are now written to the 
; current working directory. These images can be displayed with Linux
; graphics programs such as "Electric Eyes" or using the IDL "tv"
; command. To display the .jpg file instead of just saving it to the
; hard disk, activate (i.e., remove the semicolons from) the four
; commented lines below. (Note that all four of the plots generated
; appear in one large display window as standard output and as a saved
; black and white .jpg image).
image=tvrd()
info=size(image)
nx = info[1]
ny = info[2]
true_image=bytarr(3, nx, ny)
tvlct, r, g, b, /get
true_image[0, *, *] = r[image]
true_image[1, *, *] = g[image]
true_image[2, *, *] = b[image]
write_jpeg, 'plots_orbits.jpg', true_image,true=1
; device,retain=2,pseudo=8,decomposed=0
;READ_JPEG, 'plots_orbits.jpg', a, TRUE=1
;window,4,xsize=900,ysize=735
;TV, a, TRUE=1
device,retain=2,pseudo=8,decomposed=0
; Setting up graphics for the display of the orbital parameters.
window, 1, xsize=470, ysize=350 
xyouts,0.0,0.95,'!6Orbital Parameters:!X', /normal, charsize=1.5,color=2, $
alignment=0.0
xyouts,0.0,0.90,header(0), /normal, alignment=0.0, charsize=1.3, color=2
xyouts,0.0,0.86, header(2), /normal, alignment=0.0, charsize=1.3, color=2
xyouts,0.0,0.82, header(3), /normal, alignment=0.0, charsize=1.3, color=2
xyouts,0.0,0.78, header(4), /normal, alignment=0.0, charsize=1.3, color=2
xyouts,0.0,0.74, header(5), /normal, alignment=0.0, charsize=1.3, color=2
xyouts,0.0,0.70, header(6), /normal, alignment=0.0, charsize=1.3, color=2
xyouts,0.0,0.66, header(11), /normal, alignment=0.0, charsize=1.3, color=2
xyouts,0.0,0.62, header(12), /normal, alignment=0.0, charsize=1.3, color=2
xyouts,0.0,0.55,'!6Star and Planet Properties:!X', /normal, charsize=1.5, $
color=15, alignment=0.0
xyouts,0.0,0.50, header(7), /normal, alignment=0.0, charsize=1.3,color=15 
xyouts,0.0,0.46, header(8), /normal, alignment=0.0, charsize=1.3,color=15
xyouts,0.0,0.42, header(9), /normal, alignment=0.0, charsize=1.3,color=15
xyouts,0.0,0.38, header(10), /normal, alignment=0.0, charsize=1.3,color=15
; A black and white .jpeg image (.jpg) of the parameters display is
; now written to the current working directory. These images can be 
; displayed with Linux graphics programs such as "Electric Eyes" or 
; using the IDL "tv" command. To display the .jpg file instead of just 
; saving it to the hard disk, activate (i.e., remove the semicolons
; from) the four lines of code below that have been commented out.) 
image=tvrd()
info=size(image)
nx = info[1]
ny = info[2]
true_image=bytarr(3, nx, ny)
tvlct, r, g, b, /get
true_image[0, *, *] = r[image]
true_image[1, *, *] = g[image]
true_image[2, *, *] = b[image]
write_jpeg, 'parameters.jpg', true_image,true=1
; device,retain=2,pseudo=8,decomposed=0
;READ_JPEG, 'parameters.jpg', c, TRUE=1
;window,5
;TV, c, TRUE=1
device,retain=2,pseudo=8,decomposed=0
;Setting up graphics for the next display of the legend of the plot of 
; planet-to-star flux ratios vs. orbital phase for different
; wavelenghts (in the infrared part of the spectrum)
window,2,ysize=260
xyouts,0.0,0.95,'!6Legend for the Plot of Planet to Star Flux Ratios vs Orbital Phase!X', $
/normal, charsize=1.5,color=14
xyouts,0.0,0.87,'----------  Planet to Star Flux Ratio at wavelength = 10 microns (dashed ; white)', $ 
/normal, alignment=0.0, charsize=1.3
xyouts,0.0,0.81,'-.-.-.-.-.-.-.  Planet to Star Flux Ratio at wavelength = 3 microns (dash/dot ; red)',$ 
/normal, alignment=0.0, charsize=1.3, color=5
xyouts,0.0,0.75, '-...-...-...-...  Planet to Star Flux Ratio at wavelength = 1 micron  (dash/dot/dot/dot ; blue)',$ 
/normal, alignment=0.0, charsize=1.3, color=6
xyouts,0.0,0.69, '_ _ _ _ _ _ _ _ Planet to Star Flux Ratio at wavelength = 0.5 micron (long dashes ; gold)',$ 
/normal, alignment=0.0, charsize=1.3, color=9
; A black and white .jpeg image (.jpg) of the flux ratios legend
; display is now written to the current working directory. These 
; images can be displayed with Linux graphics programs such as
; "Electric Eyes" or using the IDL "tv" command. To display the 
; .jpg file instead of just saving it to the hard disk, activate 
; (i.e., remove the semicolons from) the four commented lines below. 
image=tvrd()
info=size(image)
nx = info[1]
ny = info[2]
true_image=bytarr(3, nx, ny)
tvlct, r, g, b, /get
true_image[0, *, *] = r[image]
true_image[1, *, *] = g[image]
true_image[2, *, *] = b[image]
wri
te_jpeg, 'fluxratios.jpg', true_image,true=1
READ_JPEG, 'fluxratios.jpg', b, TRUE=1
;window,6
;TV, b, TRUE=1
device,retain=2,pseudo=8,decomposed=0
; Creates postscript versions of these plots in a file called
; 'orbits_plots.ps' in the current directory
mydevice=!D.NAME
SET_PLOT, 'PS'
DEVICE, FILENAME = 'plots_orbits.ps', /LANDSCAPE
!p.multi=[0,2,2]
plot, xpos, ypos, linestyle=2, $
title='X (AU)  vs.  Y(AU)', $
xtitle='X in AU',  $
ytitle='Y in AU'
plot, phase, velocity, psym=4, $
title='Plot of Orbital Speed  vs.  Orbital Phase', $
xtitle='Orbital Phase (elapsed time/orbital period)',xcharsize=1.0,  $
ytitle='Orbital speed in km/s'
plot, phase,temp, psym=6, $
title='Planet Temperature (K) vs Orbital Phase', $
xtitle='Orbital Phase (time elapsed / orbital period)', $
ytitle='Temperature (K) of Extra-Solar Planet'
foo=[fluxr10,fluxr3,fluxr1,fluxr05]
gd=where(foo gt 0.)
ymin=min(foo[gd])
plot, phase,fluxr10,yrange=[ymin,ymax],/ylog, linestyle=2,/noerase,  $
title='Planet to Star Flux Ratios vs Orbital Phase',   $
xtitle='Orbital Phase (time elapsed / orbital period)',   $
ytitle='Planet to Star Flux Ratios vs Orbital Phase'
oplot, phase,fluxr3, linestyle=3, color=5
oplot, phase,fluxr1,linestyle=4, color=6
oplot, phase,fluxr05,linestyle=5, color=9
DEVICE, /CLOSE
SET_PLOT, mydevice
spawn, 'more orbits.dat'
; $gv plots_orbits.ps &
; Note that the postscript plots can be displayed and viewed by
; typing in '$gv orbits_plot.ps &' at the IDL command prompt
END
